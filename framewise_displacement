#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Dec  5 12:21:38 2019

@author: laugig
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import os
os.chdir('/project/3011226.01/bids/derivatives/')
fmriprepdir = '/project/3011226.01/bids/derivatives/fmriprep/'
firstleveldir = '/project/3011226.01/bids/derivatives/SPM/firstlevel/'

subjects = [1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46]
# range 1-40, excluding 5, 23
fd = pd.DataFrame()
for s in subjects:
    #convert to string    
    subj = str(s).zfill(2)
    # PRODUCTION
    for n in range(1,9):   
        run = str(n)
        if subj == '01' and n == 1 or subj == '10' and n == 1 or subj == '31' and n == 1:
            df = pd.read_csv(f'{fmriprepdir}sub-0{subj}/ses-mri01/func/sub-0{subj}_ses-mri01_task-Production{run}_acq-epi_run-2_desc-confounds_regressors.tsv', sep="\t") 
        else:            
            df = pd.read_csv(f'{fmriprepdir}sub-0{subj}/ses-mri01/func/sub-0{subj}_ses-mri01_task-Production{run}_acq-epi_run-1_desc-confounds_regressors.tsv', sep="\t", index_col=None)
        df = df.iloc[1:210]

        df['subject'] = s
        df['run'] = n

        fd = fd.append(df)
    for n in range(1,5):   
        run = str(n)
        df = pd.read_csv(f'{fmriprepdir}sub-0{subj}/ses-mri01/func/sub-0{subj}_ses-mri01_task-Comprehension{run}_acq-epi_run-1_desc-confounds_regressors.tsv', sep="\t", index_col=None)
        df = df.iloc[1:210]

        df['subject'] = s
        df['run'] = n

        fd = fd.append(df)

fd.to_csv('framewise_disp_all.csv')        

a= np.array(fd['framewise_displacement'])
a= a.astype(np.float)

plt.hist(a, bins = 100)
plt.savefig('fdall.png', dpi=150)

perc = np.percentile(a,95)
movingsubj = pd.DataFrame()
movingsubj = fd['subject'].iloc(a>perc)
movingsubjperc = fd['subject'][a>perc].to_frame()
movingsubj1 = fd['subject'][a>1].to_frame()
movingsubj25 = fd['subject'][a>2.5].to_frame()

volumesp = movingsubjperc['subject'].value_counts()
volumes1 = movingsubj1['subject'].value_counts()
volumes25 = movingsubj25['subject'].value_counts()

volumes.to_csv('moving_vols1.csv')
a>1



